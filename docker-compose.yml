services:
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"  # AMQP protocol port
      - "15672:15672"  # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 5

  producer:
    build: 
      context: .
      dockerfile: producer/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - SECRET_KEY=enteryoursecretkey
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - .:/app
    command: uvicorn producer.main:app --host 0.0.0.0 --port 8000 --reload

  consumer:
    build:
      context: .
      dockerfile: consumer/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/postgres
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    volumes:
      - .:/app
    restart: unless-stopped

volumes:
  postgres_data: 